name: Docker Build and Push

on:
  push:
    paths:
      - "04-docker/**"
    branches: [main]
  workflow_dispatch:

env:
  # REGISTRY: ghcr.io
  IMAGE_NAME: fastapi-app

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./04-docker

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest -v

  dockerhub:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push to Docker Hub
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest ./04-docker
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

  # container-actions:
  #   needs: test
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Extract metadata
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
  #         tags: |
  #           type=raw,value=latest

  #     - name: Build and push with container actions
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./04-docker
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max
